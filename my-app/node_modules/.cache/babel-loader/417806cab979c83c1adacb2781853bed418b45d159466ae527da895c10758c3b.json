{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/my-app/src/Components/Login.js\",\n  _s = $RefreshSig$();\n// // Login.js\n\n// import React, { useState } from 'react';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleLogin = () => {\n\n//         fetch('https://task-app-server-07x5.onrender.com/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ username, password }),\n//         })\n//         .then(response => response.json())\n//         .then(data => {\n//             // Handle successful login, e.g., store user data in state or local storage.\n//             console.log('Login successful!', data);\n//         })\n//         .catch(error => {\n//             // Handle login error, e.g., display error message to the user.\n//             console.error('Login error:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h2>Login</h2>\n//             <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n//                 <label>Username:\n//                     <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <label>Password:\n//                     <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userName, setUserName] = useState('');\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check if the user is already authenticated\n    fetch('https://task-app-server-07x5.onrender.com/check_session').then(response => response.json()).then(data => {\n      if (data.id) {\n        setIsAuthenticated(true);\n        setUserName(data.name);\n      }\n    }).catch(error => console.error('Error:', error));\n  }, []);\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch('https://task-app-server-07x5.onrender.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.id) {\n        setIsAuthenticated(true);\n        setUserName(data.name);\n        // navigate('/');\n      } else {\n        setError(data.error || 'Login failed');\n      }\n    }).catch(error => {\n      setError('An error occurred. Please try again.');\n    });\n  };\n  const handleLogout = () => {\n    fetch('https://task-app-server-07x5.onrender.com/logout', {\n      method: 'DELETE'\n    }).then(() => {\n      setIsAuthenticated(false);\n      setUserName('');\n      // navigate('/');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"d5BqJQynVhFCb1XxUU3yVe3vXKk=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","isAuthenticated","setIsAuthenticated","userName","setUserName","fetch","then","response","json","data","id","name","catch","console","handleLogin","e","preventDefault","method","headers","body","JSON","stringify","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/my-app/src/Components/Login.js"],"sourcesContent":["// // Login.js\n\n// import React, { useState } from 'react';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleLogin = () => {\n        \n//         fetch('https://task-app-server-07x5.onrender.com/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ username, password }),\n//         })\n//         .then(response => response.json())\n//         .then(data => {\n//             // Handle successful login, e.g., store user data in state or local storage.\n//             console.log('Login successful!', data);\n//         })\n//         .catch(error => {\n//             // Handle login error, e.g., display error message to the user.\n//             console.error('Login error:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h2>Login</h2>\n//             <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n//                 <label>Username:\n//                     <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <label>Password:\n//                     <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userName, setUserName] = useState('');\n    // const navigate = useNavigate();\n\n    useEffect(() => {\n        // Check if the user is already authenticated\n        fetch('https://task-app-server-07x5.onrender.com/check_session')\n        .then(response => response.json())\n        .then(data => {\n            if (data.id) {\n                setIsAuthenticated(true);\n                setUserName(data.name);\n            }\n        })\n        .catch(error => console.error('Error:', error));\n    }, []);\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        fetch('https://task-app-server-07x5.onrender.com/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password })\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            if (data.id) {\n                setIsAuthenticated(true);\n                setUserName(data.name);\n                // navigate('/');\n            } else {\n                setError(data.error || 'Login failed');\n            }\n        })\n        .catch((error) => {\n            setError('An error occurred. Please try again.');\n        });\n    };\n\n    const handleLogout = () => {\n        fetch('https://task-app-server-07x5.onrender.com/logout', {\n            method: 'DELETE'\n        })\n        .then(() => {\n            setIsAuthenticated(false);\n            setUserName('');\n            // navigate('/');\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        });\n    };\n\n    return (\n        <div>\n            <Navbar/>\n            {isAuthenticated ? (\n                <div>\n                    <h2>Welcome, {userName}</h2>\n                    <button onClick={handleLogout}>Logout</button>\n                </div>\n            ) : (\n                <form onSubmit={handleLogin}>\n                    <div>\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Login</button>\n                    {error && <p>{error}</p>}\n                </form>\n            )}\n        </div>\n    );\n};\n\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}