{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/my-app/src/Components/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userName, setUserName] = useState('');\n  useEffect(() => {\n    fetch('https://task-app-server-07x5.onrender.com/check_session').then(response => response.json()).then(data => {\n      if (data.id) {\n        setIsAuthenticated(true);\n        setUserName(data.name);\n      }\n    }).catch(error => console.error('Error:', error));\n  }, []);\n  const login = (email, password) => {\n    return fetch('https://task-app-server-07x5.onrender.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.id) {\n        setIsAuthenticated(true);\n        setUserName(data.name);\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n  const logout = () => {\n    return fetch('https://task-app-server-07x5.onrender.com/logout', {\n      method: 'DELETE'\n    }).then(() => {\n      setIsAuthenticated(false);\n      setUserName('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userName,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"DV3xje5YpGs0N1ddiWN2sOfgsgo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userName","setUserName","fetch","then","response","json","data","id","name","catch","error","console","login","email","password","method","headers","body","JSON","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/my-app/src/Components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userName, setUserName] = useState('');\n\n    useEffect(() => {\n        fetch('https://task-app-server-07x5.onrender.com/check_session')\n            .then(response => response.json())\n            .then(data => {\n                if (data.id) {\n                    setIsAuthenticated(true);\n                    setUserName(data.name);\n                }\n            })\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    const login = (email, password) => {\n        return fetch('https://task-app-server-07x5.onrender.com/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data.id) {\n                setIsAuthenticated(true);\n                setUserName(data.name);\n                return true;\n            } else {\n                return false;\n            }\n        });\n    };\n\n    const logout = () => {\n        return fetch('https://task-app-server-07x5.onrender.com/logout', {\n            method: 'DELETE'\n        })\n        .then(() => {\n            setIsAuthenticated(false);\n            setUserName('');\n        });\n    };\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, userName, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,yDAAyD,CAAC,CAC3DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,EAAE,EAAE;QACTR,kBAAkB,CAAC,IAAI,CAAC;QACxBE,WAAW,CAACK,IAAI,CAACE,IAAI,CAAC;MAC1B;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC/B,OAAOZ,KAAK,CAAC,iDAAiD,EAAE;MAC5Da,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC,CACDX,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,EAAE,EAAE;QACTR,kBAAkB,CAAC,IAAI,CAAC;QACxBE,WAAW,CAACK,IAAI,CAACE,IAAI,CAAC;QACtB,OAAO,IAAI;MACf,CAAC,MAAM;QACH,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACjB,OAAOlB,KAAK,CAAC,kDAAkD,EAAE;MAC7Da,MAAM,EAAE;IACZ,CAAC,CAAC,CACDZ,IAAI,CAAC,MAAM;MACRJ,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,eAAe;MAAEE,QAAQ;MAAEY,KAAK;MAAEQ;IAAO,CAAE;IAAAxB,QAAA,EACrEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC7B,EAAA,CAnDWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}