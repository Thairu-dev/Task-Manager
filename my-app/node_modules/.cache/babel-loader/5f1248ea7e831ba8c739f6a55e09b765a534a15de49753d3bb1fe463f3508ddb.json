{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/my-app/src/Components/TaskForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Navbar from './Navbar';\n\n// const TaskForm = ({ onAddTask }) => {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [dueDate, setDueDate] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n//     try {\n//       const response = await axios.post('https://task-app-server-07x5.onrender.com/tasks', {\n//         title,\n//         description,\n//         due_date: dueDate,\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       // Call onAddTask function with the newly created task from response data\n//       onAddTask(response.data);\n\n//       // Clear form inputs after successful task creation\n//       setTitle('');\n//       setDescription('');\n//       setDueDate('');\n//     } catch (error) {\n//       console.error('Task creation failed', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar/>\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         placeholder=\"Title\"\n//         required\n//       />\n//       <textarea\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         placeholder=\"Description\"\n//       />\n//       <input\n//         type=\"date\"\n//         value={dueDate}\n//         onChange={(e) => setDueDate(e.target.value)}\n//       />\n//       <button type=\"submit\">Create Task</button>\n//     </form>\n//     </div>\n//   );\n// };\n\n// export default TaskForm;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTask = ({\n  setTasks,\n  tasks\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    dueDate: '',\n    description: ''\n  });\n  const handleCreateTask = e => {\n    e.preventDefault();\n    axios.post('https://task-app-server-07x5.onrender.com/tasks', newTask).then(response => {\n      setTasks([...tasks, response.data]);\n      setNewTask({\n        title: '',\n        dueDate: '',\n        description: ''\n      });\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateTask,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: newTask.title,\n      onChange: e => setNewTask({\n        ...newTask,\n        title: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Due Date\",\n      value: newTask.dueDate,\n      onChange: e => setNewTask({\n        ...newTask,\n        dueDate: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: newTask.description,\n      onChange: e => setNewTask({\n        ...newTask,\n        description: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"2QM8xfpmdRqMM9LNuLE3D3SwZX8=\");\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateTask","setTasks","tasks","_s","newTask","setNewTask","title","dueDate","description","handleCreateTask","e","preventDefault","post","then","response","data","catch","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/my-app/src/Components/TaskForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Navbar from './Navbar';\n\n// const TaskForm = ({ onAddTask }) => {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [dueDate, setDueDate] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n//     try {\n//       const response = await axios.post('https://task-app-server-07x5.onrender.com/tasks', {\n//         title,\n//         description,\n//         due_date: dueDate,\n//       }, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       // Call onAddTask function with the newly created task from response data\n//       onAddTask(response.data);\n\n//       // Clear form inputs after successful task creation\n//       setTitle('');\n//       setDescription('');\n//       setDueDate('');\n//     } catch (error) {\n//       console.error('Task creation failed', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar/>\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         placeholder=\"Title\"\n//         required\n//       />\n//       <textarea\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         placeholder=\"Description\"\n//       />\n//       <input\n//         type=\"date\"\n//         value={dueDate}\n//         onChange={(e) => setDueDate(e.target.value)}\n//       />\n//       <button type=\"submit\">Create Task</button>\n//     </form>\n//     </div>\n//   );\n// };\n\n// export default TaskForm;\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CreateTask = ({ setTasks, tasks }) => {\n  const [newTask, setNewTask] = useState({ title: '', dueDate: '', description: '' });\n\n  const handleCreateTask = (e) => {\n    e.preventDefault();\n    axios.post('https://task-app-server-07x5.onrender.com/tasks', newTask)\n      .then(response => {\n        setTasks([...tasks, response.data]);\n        setNewTask({ title: '', dueDate: '', description: '' });\n      })\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <form onSubmit={handleCreateTask}>\n      <input \n        type=\"text\" \n        placeholder=\"Title\" \n        value={newTask.title} \n        onChange={(e) => setNewTask({ ...newTask, title: e.target.value })} \n        required \n      />\n      <input \n        type=\"date\" \n        placeholder=\"Due Date\" \n        value={newTask.dueDate} \n        onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })} \n        required \n      />\n      <textarea \n        placeholder=\"Description\" \n        value={newTask.description} \n        onChange={(e) => setNewTask({ ...newTask, description: e.target.value })} \n        required \n      />\n      <button type=\"submit\">Add Task</button>\n    </form>\n  );\n};\n\nexport default CreateTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}