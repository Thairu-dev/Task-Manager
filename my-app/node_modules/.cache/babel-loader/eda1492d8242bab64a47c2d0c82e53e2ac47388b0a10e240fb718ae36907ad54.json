{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/my-app/src/Components/Login.js\",\n  _s = $RefreshSig$();\n// // Login.js\n\n// import React, { useState } from 'react';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleLogin = () => {\n\n//         fetch('https://task-app-server-07x5.onrender.com/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ username, password }),\n//         })\n//         .then(response => response.json())\n//         .then(data => {\n//             // Handle successful login, e.g., store user data in state or local storage.\n//             console.log('Login successful!', data);\n//         })\n//         .catch(error => {\n//             // Handle login error, e.g., display error message to the user.\n//             console.error('Login error:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h2>Login</h2>\n//             <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n//                 <label>Username:\n//                     <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <label>Password:\n//                     <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // Track login state\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    fetch('https://task-app-server-07x5.onrender.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Login successful!', data);\n      setLoggedIn(true); // Update login state\n      navigate('/dashboard'); // Redirect to dashboard\n    }).catch(error => {\n      console.error('Login error:', error);\n    });\n  };\n  const handleLogout = () => {\n    setLoggedIn(false); // Clear login state\n    navigate('/'); // Redirect to login page\n  };\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"You are logged in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleLogin();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"gZmFVuBMQW8UdPlW0g2rdR6hBqQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Auth","_s","username","setUsername","password","setPassword","loggedIn","setLoggedIn","navigate","handleLogin","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","e","preventDefault","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/my-app/src/Components/Login.js"],"sourcesContent":["// // Login.js\n\n// import React, { useState } from 'react';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleLogin = () => {\n        \n//         fetch('https://task-app-server-07x5.onrender.com/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ username, password }),\n//         })\n//         .then(response => response.json())\n//         .then(data => {\n//             // Handle successful login, e.g., store user data in state or local storage.\n//             console.log('Login successful!', data);\n//         })\n//         .catch(error => {\n//             // Handle login error, e.g., display error message to the user.\n//             console.error('Login error:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h2>Login</h2>\n//             <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n//                 <label>Username:\n//                     <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <label>Password:\n//                     <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n//                 </label>\n//                 <br />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Auth = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loggedIn, setLoggedIn] = useState(false); // Track login state\n    const navigate = useNavigate();\n\n    const handleLogin = () => {\n        fetch('https://task-app-server-07x5.onrender.com/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log('Login successful!', data);\n            setLoggedIn(true); // Update login state\n            navigate('/dashboard');  // Redirect to dashboard\n        })\n        .catch(error => {\n            console.error('Login error:', error);\n        });\n    };\n\n    const handleLogout = () => {\n        setLoggedIn(false); // Clear login state\n        navigate('/'); // Redirect to login page\n    };\n\n    if (loggedIn) {\n        return (\n            <div>\n                <div>You are logged in!</div>\n                <button onClick={handleLogout}>Logout</button>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n                <label>Username:\n                    <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n                </label>\n                <br />\n                <label>Password:\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n                </label>\n                <br />\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}