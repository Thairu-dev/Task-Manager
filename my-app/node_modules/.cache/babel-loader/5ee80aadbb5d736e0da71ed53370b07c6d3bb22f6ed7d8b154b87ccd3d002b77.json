{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/my-app/src/Components/Assignment.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './Navbar';\n\n// function AssignmentForm() {\n//   const [tasks, setTasks] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   const [selectedTask, setSelectedTask] = useState('');\n//   const [selectedUser, setSelectedUser] = useState('');\n//   const [status, setStatus] = useState(''); \n\n//   useEffect(() => {\n//     fetchTasks();\n//     fetchUsers();\n//   }, []);\n\n//   function fetchTasks() {\n//     fetch('https://task-app-server-07x5.onrender.com/tasks')\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch tasks');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         setTasks(data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching tasks:', error);\n//       });\n//   };\n\n//   function fetchUsers() {\n//     fetch('https://task-app-server-07x5.onrender.com/users')\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch users');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         setUsers(data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching users:', error);\n//       });\n//   };\n\n//   function handleAssignTask(event) {\n//     event.preventDefault();\n//     const assignmentData = { \"task_id\": selectedTask, \"user_id\": selectedUser, \"status\": status};\n//     console.log(assignmentData)\n//     fetch('https://task-app-server-07x5.onrender.com/assignments', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(assignmentData),\n//     })\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to assign task');\n//         }\n//       })\n//       .then(data => {\n//         console.log('Task assigned successfully:', data);\n//         window.location.reload();\n//       })\n//       .catch(error => {\n//         console.error('Error assigning task:', error);\n//       });\n//   };\n\n//   return (\n//     <div class=\"center aligned content\" >\n//       <Navbar/>\n//       <h2 class=\"assignment-heading\" >Assign Task</h2>\n//       <img className='centered-element' src={\"./images/3894977.jpg\"} width={\"200px\"} alt={\"home-img\"}/>\n//       <div className='assignments-container'>\n//       <form className='assignment-form' onSubmit={handleAssignTask}>\n//         <label>\n//           Task:\n//           <select value={selectedTask} onChange={(e) => setSelectedTask(e.target.value)} required>\n//             <option value=\"\">Select Task</option>\n//             {tasks.map(task => (\n//               <option key={task.id} value={task.id}>{task.title}</option>\n//             ))}\n//           </select>\n//         </label>\n//         <br></br>\n//         <label>\n//           User:\n//           <select value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)} required>\n//             <option value=\"\">Select User</option>\n//             {users.map(user => (\n//               <option key={user.id} value={user.id}>{user.name}</option>\n//             ))}\n//           </select>\n//         </label>\n//         <label>\n//           Status:\n//           <select value={status} onChange={(e) => setStatus(e.target.value)} required>\n//             <option value=\"\">Select Status</option>\n//             <option value=\"In Progress\">Not Started</option>\n//             <option value=\"Pending\">In Progress</option>\n//             <option value=\"Completed\">Completed</option>\n//           </select>\n//         </label>\n//         <br></br>\n//         <button class=\"ui button\" type=\"submit\">Assign Task</button>\n//         {/* <button class=\"ui button\">Assign Task</button> */}\n//       </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// <div role=\"listbox\" aria-expanded=\"false\" class=\"ui fluid selection dropdown\" tabindex=\"0\"><div aria-atomic=\"true\" aria-live=\"polite\" role=\"alert\" class=\"divider default text\">Select Friend</div><i aria-hidden=\"true\" class=\"dropdown icon\"></i><div class=\"menu transition\"><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"true\" class=\"selected item\"><img src=\"/images/avatar/small/jenny.jpg\" class=\"ui avatar image\"/><span class=\"text\">Jenny Hess</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/elliot.jpg\" class=\"ui avatar image\"/><span class=\"text\">Elliot Fu</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/stevie.jpg\" class=\"ui avatar image\"/><span class=\"text\">Stevie Feliciano</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/christian.jpg\" class=\"ui avatar image\"/><span class=\"text\">Christian</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/matt.jpg\" class=\"ui avatar image\"/><span class=\"text\">Matt</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/justen.jpg\" class=\"ui avatar image\"/><span class=\"text\">Justen Kitsune</span></div></div></div>\n\n// export default AssignmentForm;\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignmentForm() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [assignments, setAssignments] = useState([]);\n  const [selectedTask, setSelectedTask] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    fetchTasks();\n    fetchUsers();\n    fetchAssignments();\n  }, []);\n  function fetchTasks() {\n    fetch('https://task-app-server-07x5.onrender.com/tasks').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      return response.json();\n    }).then(data => {\n      setTasks(data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  }\n  function fetchUsers() {\n    fetch('https://task-app-server-07x5.onrender.com/users').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      return response.json();\n    }).then(data => {\n      setUsers(data);\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n    });\n  }\n  function fetchAssignments() {\n    fetch('https://task-app-server-07x5.onrender.com/assignments').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch assignments');\n      }\n      return response.json();\n    }).then(data => {\n      setAssignments(data);\n    }).catch(error => {\n      console.error('Error fetching assignments:', error);\n    });\n  }\n  function handleAssignTask(event) {\n    event.preventDefault();\n    const assignmentData = {\n      \"task_id\": selectedTask,\n      \"user_id\": selectedUser,\n      \"status\": status\n    };\n    console.log(assignmentData);\n    fetch('https://task-app-server-07x5.onrender.com/assignments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(assignmentData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to assign task');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Task assigned successfully:', data);\n      fetchAssignments(); // Fetch updated assignments list\n    }).catch(error => {\n      console.error('Error assigning task:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center aligned content\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"assignment-heading\",\n      children: \"Assign Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"centered-element\",\n      src: \"./images/3894977.jpg\",\n      width: \"200px\",\n      alt: \"home-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignments-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"assignment-form\",\n        onSubmit: handleAssignTask,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask,\n            onChange: e => setSelectedTask(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: task.id,\n              children: task.title\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"User:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUser,\n            onChange: e => setSelectedUser(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.name\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: status,\n            onChange: e => setStatus(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Not Started\",\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"In Progress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button\",\n          type: \"submit\",\n          children: \"Assign Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: assignments.map(assignment => {\n          var _assignment$task, _assignment$user;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Task: \", ((_assignment$task = assignment.task) === null || _assignment$task === void 0 ? void 0 : _assignment$task.title) || 'N/A', \" - User: \", ((_assignment$user = assignment.user) === null || _assignment$user === void 0 ? void 0 : _assignment$user.name) || 'N/A', \" - Status: \", assignment.status]\n          }, assignment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_s(AssignmentForm, \"8JzlEUKiYNSNmliRpyjWGTQ5Dew=\");\n_c = AssignmentForm;\nexport default AssignmentForm;\nvar _c;\n$RefreshReg$(_c, \"AssignmentForm\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","AssignmentForm","_s","tasks","setTasks","users","setUsers","assignments","setAssignments","selectedTask","setSelectedTask","selectedUser","setSelectedUser","status","setStatus","fetchTasks","fetchUsers","fetchAssignments","fetch","then","response","ok","Error","json","data","catch","error","console","handleAssignTask","event","preventDefault","assignmentData","log","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","alt","onSubmit","value","onChange","e","target","required","map","task","id","title","user","name","type","assignment","_assignment$task","_assignment$user","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/my-app/src/Components/Assignment.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import Navbar from './Navbar';\n\n\n// function AssignmentForm() {\n//   const [tasks, setTasks] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   const [selectedTask, setSelectedTask] = useState('');\n//   const [selectedUser, setSelectedUser] = useState('');\n//   const [status, setStatus] = useState(''); \n\n//   useEffect(() => {\n//     fetchTasks();\n//     fetchUsers();\n//   }, []);\n\n//   function fetchTasks() {\n//     fetch('https://task-app-server-07x5.onrender.com/tasks')\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch tasks');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         setTasks(data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching tasks:', error);\n//       });\n//   };\n\n//   function fetchUsers() {\n//     fetch('https://task-app-server-07x5.onrender.com/users')\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch users');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         setUsers(data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching users:', error);\n//       });\n//   };\n\n//   function handleAssignTask(event) {\n//     event.preventDefault();\n//     const assignmentData = { \"task_id\": selectedTask, \"user_id\": selectedUser, \"status\": status};\n//     console.log(assignmentData)\n//     fetch('https://task-app-server-07x5.onrender.com/assignments', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(assignmentData),\n//     })\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Failed to assign task');\n//         }\n//       })\n//       .then(data => {\n//         console.log('Task assigned successfully:', data);\n//         window.location.reload();\n//       })\n//       .catch(error => {\n//         console.error('Error assigning task:', error);\n//       });\n//   };\n\n//   return (\n//     <div class=\"center aligned content\" >\n//       <Navbar/>\n//       <h2 class=\"assignment-heading\" >Assign Task</h2>\n//       <img className='centered-element' src={\"./images/3894977.jpg\"} width={\"200px\"} alt={\"home-img\"}/>\n//       <div className='assignments-container'>\n//       <form className='assignment-form' onSubmit={handleAssignTask}>\n//         <label>\n//           Task:\n//           <select value={selectedTask} onChange={(e) => setSelectedTask(e.target.value)} required>\n//             <option value=\"\">Select Task</option>\n//             {tasks.map(task => (\n//               <option key={task.id} value={task.id}>{task.title}</option>\n//             ))}\n//           </select>\n//         </label>\n//         <br></br>\n//         <label>\n//           User:\n//           <select value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)} required>\n//             <option value=\"\">Select User</option>\n//             {users.map(user => (\n//               <option key={user.id} value={user.id}>{user.name}</option>\n//             ))}\n//           </select>\n//         </label>\n//         <label>\n//           Status:\n//           <select value={status} onChange={(e) => setStatus(e.target.value)} required>\n//             <option value=\"\">Select Status</option>\n//             <option value=\"In Progress\">Not Started</option>\n//             <option value=\"Pending\">In Progress</option>\n//             <option value=\"Completed\">Completed</option>\n//           </select>\n//         </label>\n//         <br></br>\n//         <button class=\"ui button\" type=\"submit\">Assign Task</button>\n//         {/* <button class=\"ui button\">Assign Task</button> */}\n//       </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// <div role=\"listbox\" aria-expanded=\"false\" class=\"ui fluid selection dropdown\" tabindex=\"0\"><div aria-atomic=\"true\" aria-live=\"polite\" role=\"alert\" class=\"divider default text\">Select Friend</div><i aria-hidden=\"true\" class=\"dropdown icon\"></i><div class=\"menu transition\"><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"true\" class=\"selected item\"><img src=\"/images/avatar/small/jenny.jpg\" class=\"ui avatar image\"/><span class=\"text\">Jenny Hess</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/elliot.jpg\" class=\"ui avatar image\"/><span class=\"text\">Elliot Fu</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/stevie.jpg\" class=\"ui avatar image\"/><span class=\"text\">Stevie Feliciano</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/christian.jpg\" class=\"ui avatar image\"/><span class=\"text\">Christian</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/matt.jpg\" class=\"ui avatar image\"/><span class=\"text\">Matt</span></div><div style=\"pointer-events:all\" role=\"option\" aria-checked=\"false\" aria-selected=\"false\" class=\"item\"><img src=\"/images/avatar/small/justen.jpg\" class=\"ui avatar image\"/><span class=\"text\">Justen Kitsune</span></div></div></div>\n\n// export default AssignmentForm;\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\n\nfunction AssignmentForm() {\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [assignments, setAssignments] = useState([]);\n  const [selectedTask, setSelectedTask] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    fetchTasks();\n    fetchUsers();\n    fetchAssignments();\n  }, []);\n\n  function fetchTasks() {\n    fetch('https://task-app-server-07x5.onrender.com/tasks')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setTasks(data);\n      })\n      .catch(error => {\n        console.error('Error fetching tasks:', error);\n      });\n  }\n\n  function fetchUsers() {\n    fetch('https://task-app-server-07x5.onrender.com/users')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch users');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setUsers(data);\n      })\n      .catch(error => {\n        console.error('Error fetching users:', error);\n      });\n  }\n\n  function fetchAssignments() {\n    fetch('https://task-app-server-07x5.onrender.com/assignments')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch assignments');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setAssignments(data);\n      })\n      .catch(error => {\n        console.error('Error fetching assignments:', error);\n      });\n  }\n\n  function handleAssignTask(event) {\n    event.preventDefault();\n    const assignmentData = { \"task_id\": selectedTask, \"user_id\": selectedUser, \"status\": status };\n    console.log(assignmentData)\n    fetch('https://task-app-server-07x5.onrender.com/assignments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(assignmentData),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to assign task');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Task assigned successfully:', data);\n        fetchAssignments(); // Fetch updated assignments list\n      })\n      .catch(error => {\n        console.error('Error assigning task:', error);\n      });\n  }\n\n  return (\n    <div className=\"center aligned content\">\n      <Navbar />\n      <h2 className=\"assignment-heading\">Assign Task</h2>\n      <img className=\"centered-element\" src={\"./images/3894977.jpg\"} width={\"200px\"} alt={\"home-img\"} />\n      <div className=\"assignments-container\">\n        <form className=\"assignment-form\" onSubmit={handleAssignTask}>\n          <label>\n            Task:\n            <select value={selectedTask} onChange={(e) => setSelectedTask(e.target.value)} required>\n              <option value=\"\">Select Task</option>\n              {tasks.map(task => (\n                <option key={task.id} value={task.id}>{task.title}</option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <label>\n            User:\n            <select value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)} required>\n              <option value=\"\">Select User</option>\n              {users.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <label>\n            Status:\n            <select value={status} onChange={(e) => setStatus(e.target.value)} required>\n              <option value=\"\">Select Status</option>\n              <option value=\"Not Started\">Not Started</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Completed\">Completed</option>\n            </select>\n          </label>\n          <br />\n          <button className=\"ui button\" type=\"submit\">Assign Task</button>\n        </form>\n        <h2>Assignments</h2>\n        <ul>\n          {assignments.map(assignment => (\n            <li key={assignment.id}>\n              Task: {assignment.task?.title || 'N/A'} - User: {assignment.user?.name || 'N/A'} - Status: {assignment.status}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default AssignmentForm;\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdkB,UAAU,CAAC,CAAC;IACZC,UAAU,CAAC,CAAC;IACZC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}