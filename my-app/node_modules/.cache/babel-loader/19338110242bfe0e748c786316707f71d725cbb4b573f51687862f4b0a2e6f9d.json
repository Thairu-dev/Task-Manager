{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/my-app/src/Components/Login.js\",\n  _s = $RefreshSig$();\n// // // Login.js\n\n// // import React, { useState } from 'react';\n\n// // const Login = () => {\n// //     const [username, setUsername] = useState('');\n// //     const [password, setPassword] = useState('');\n\n// //     const handleLogin = () => {\n\n// //         fetch('https://task-app-server-07x5.onrender.com/login', {\n// //             method: 'POST',\n// //             headers: {\n// //                 'Content-Type': 'application/json',\n// //             },\n// //             body: JSON.stringify({ username, password }),\n// //         })\n// //         .then(response => response.json())\n// //         .then(data => {\n// //             // Handle successful login, e.g., store user data in state or local storage.\n// //             console.log('Login successful!', data);\n// //         })\n// //         .catch(error => {\n// //             // Handle login error, e.g., display error message to the user.\n// //             console.error('Login error:', error);\n// //         });\n// //     };\n\n// //     return (\n// //         <div>\n// //             <h2>Login</h2>\n// //             <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n// //                 <label>Username:\n// //                     <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n// //                 </label>\n// //                 <br />\n// //                 <label>Password:\n// //                     <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n// //                 </label>\n// //                 <br />\n// //                 <button type=\"submit\">Login</button>\n// //             </form>\n// //         </div>\n// //     );\n// // };\n\n// // export default Login;\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import Navbar from './Navbar';\n\n// const LoginForm = () => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const [isAuthenticated, setIsAuthenticated] = useState(false);\n//     const [userName, setUserName] = useState('');\n//     // const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // Check if the user is already authenticated\n//         fetch('https://task-app-server-07x5.onrender.com/check_session')\n//         .then(response => response.json())\n//         .then(data => {\n//             if (data.id) {\n//                 setIsAuthenticated(true);\n//                 setUserName(data.name);\n//             }\n//         })\n//         .catch(error => console.error('Error:', error));\n//     }, []);\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n\n//         fetch('https://task-app-server-07x5.onrender.com/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ email, password })\n//         })\n//         .then((response) => response.json())\n//         .then((data) => {\n//             if (data.id) {\n//                 setIsAuthenticated(true);\n//                 setUserName(data.name);\n//                 // navigate('/');\n//             } else {\n//                 setError(data.error || 'Login failed');\n//             }\n//         })\n//         .catch((error) => {\n//             setError('An error occurred. Please try again.');\n//         });\n//     };\n\n//     const handleLogout = () => {\n//         fetch('https://task-app-server-07x5.onrender.com/logout', {\n//             method: 'DELETE'\n//         })\n//         .then(() => {\n//             setIsAuthenticated(false);\n//             setUserName('');\n//             // navigate('/');\n//         })\n//         .catch((error) => {\n//             console.error('Error:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <Navbar/>\n//             {isAuthenticated ? (\n//                 <div>\n//                     <h2>Welcome, {userName}</h2>\n//                     <button onClick={handleLogout}>Logout</button>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleLogin}>\n//                     <div>\n//                         <label>Email:</label>\n//                         <input\n//                             type=\"email\"\n//                             value={email}\n//                             onChange={(e) => setEmail(e.target.value)}\n//                             required\n//                         />\n//                     </div>\n//                     <div>\n//                         <label>Password:</label>\n//                         <input\n//                             type=\"password\"\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                     </div>\n//                     <button type=\"submit\">Login</button>\n//                     {error && <p>{error}</p>}\n//                 </form>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default LoginForm;\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const success = await login(email, password);\n    if (success) {\n      navigate('/');\n    } else {\n      setError('Login failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"hxFvQ/KXvVg3E7GrJ5Kc76utHsI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","Navbar","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","login","navigate","handleLogin","e","preventDefault","success","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/my-app/src/Components/Login.js"],"sourcesContent":["// // // Login.js\n\n// // import React, { useState } from 'react';\n\n// // const Login = () => {\n// //     const [username, setUsername] = useState('');\n// //     const [password, setPassword] = useState('');\n\n// //     const handleLogin = () => {\n        \n// //         fetch('https://task-app-server-07x5.onrender.com/login', {\n// //             method: 'POST',\n// //             headers: {\n// //                 'Content-Type': 'application/json',\n// //             },\n// //             body: JSON.stringify({ username, password }),\n// //         })\n// //         .then(response => response.json())\n// //         .then(data => {\n// //             // Handle successful login, e.g., store user data in state or local storage.\n// //             console.log('Login successful!', data);\n// //         })\n// //         .catch(error => {\n// //             // Handle login error, e.g., display error message to the user.\n// //             console.error('Login error:', error);\n// //         });\n// //     };\n\n// //     return (\n// //         <div>\n// //             <h2>Login</h2>\n// //             <form onSubmit={e => { e.preventDefault(); handleLogin(); }}>\n// //                 <label>Username:\n// //                     <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n// //                 </label>\n// //                 <br />\n// //                 <label>Password:\n// //                     <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n// //                 </label>\n// //                 <br />\n// //                 <button type=\"submit\">Login</button>\n// //             </form>\n// //         </div>\n// //     );\n// // };\n\n// // export default Login;\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import Navbar from './Navbar';\n\n// const LoginForm = () => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const [isAuthenticated, setIsAuthenticated] = useState(false);\n//     const [userName, setUserName] = useState('');\n//     // const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // Check if the user is already authenticated\n//         fetch('https://task-app-server-07x5.onrender.com/check_session')\n//         .then(response => response.json())\n//         .then(data => {\n//             if (data.id) {\n//                 setIsAuthenticated(true);\n//                 setUserName(data.name);\n//             }\n//         })\n//         .catch(error => console.error('Error:', error));\n//     }, []);\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n\n//         fetch('https://task-app-server-07x5.onrender.com/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ email, password })\n//         })\n//         .then((response) => response.json())\n//         .then((data) => {\n//             if (data.id) {\n//                 setIsAuthenticated(true);\n//                 setUserName(data.name);\n//                 // navigate('/');\n//             } else {\n//                 setError(data.error || 'Login failed');\n//             }\n//         })\n//         .catch((error) => {\n//             setError('An error occurred. Please try again.');\n//         });\n//     };\n\n//     const handleLogout = () => {\n//         fetch('https://task-app-server-07x5.onrender.com/logout', {\n//             method: 'DELETE'\n//         })\n//         .then(() => {\n//             setIsAuthenticated(false);\n//             setUserName('');\n//             // navigate('/');\n//         })\n//         .catch((error) => {\n//             console.error('Error:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <Navbar/>\n//             {isAuthenticated ? (\n//                 <div>\n//                     <h2>Welcome, {userName}</h2>\n//                     <button onClick={handleLogout}>Logout</button>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleLogin}>\n//                     <div>\n//                         <label>Email:</label>\n//                         <input\n//                             type=\"email\"\n//                             value={email}\n//                             onChange={(e) => setEmail(e.target.value)}\n//                             required\n//                         />\n//                     </div>\n//                     <div>\n//                         <label>Password:</label>\n//                         <input\n//                             type=\"password\"\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                     </div>\n//                     <button type=\"submit\">Login</button>\n//                     {error && <p>{error}</p>}\n//                 </form>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default LoginForm;\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\nimport Navbar from './Navbar';\n\nconst LoginForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const { login } = useContext(AuthContext);\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        const success = await login(email, password);\n        if (success) {\n            navigate('/');\n        } else {\n            setError('Login failed. Please try again.');\n        }\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n                {error && <p>{error}</p>}\n            </form>\n        </div>\n    );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEe;EAAM,CAAC,GAAGd,UAAU,CAACE,WAAW,CAAC;EACzC,MAAMa,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG,MAAML,KAAK,CAACN,KAAK,EAAEE,QAAQ,CAAC;IAC5C,IAAIS,OAAO,EAAE;MACTJ,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACHF,QAAQ,CAAC,iCAAiC,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAe,QAAA,gBACIf,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA;MAAMoB,QAAQ,EAAET,WAAY;MAAAI,QAAA,gBACxBf,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBnB,OAAA;UACIqB,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEnB,KAAM;UACboB,QAAQ,EAAGX,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNnB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBnB,OAAA;UACIqB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEjB,QAAS;UAChBkB,QAAQ,EAAGX,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNnB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACnCZ,KAAK,iBAAIP,OAAA;QAAAe,QAAA,EAAIR;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACjB,EAAA,CA5CID,SAAS;EAAA,QAKML,WAAW;AAAA;AAAA8B,EAAA,GAL1BzB,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}