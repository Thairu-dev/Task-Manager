{"ast":null,"code":"var _jsxFileName = \"/home/nyole/Downloads/Task-Manager/src/Components/TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('https://task-app-server-07x5.onrender.com/tasks');\n      setTasks(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setLoading(false);\n    }\n  };\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleDeleteTask = async id => {\n    const token = localStorage.getItem('token'); // Retrieve token from local storage\n\n    try {\n      await axios.delete(`https://task-app-server-07x5.onrender.com/tasks/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Set authorization header with token\n        }\n      });\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      loading: loading,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"Pagxvp8rtPw6MBgF7eSYjucQaJI=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskForm","TaskList","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","loading","setLoading","fetchTasks","response","get","data","error","console","handleAddTask","newTask","handleDeleteTask","id","token","localStorage","getItem","delete","headers","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onDeleteTask","_c","$RefreshReg$"],"sources":["/home/nyole/Downloads/Task-Manager/src/Components/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\n\nconst TaskPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('https://task-app-server-07x5.onrender.com/tasks');\n      setTasks(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleAddTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleDeleteTask = async (id) => {\n    const token = localStorage.getItem('token'); // Retrieve token from local storage\n\n    try {\n      await axios.delete(`https://task-app-server-07x5.onrender.com/tasks/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Set authorization header with token\n        }\n      });\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management</h1>\n      <TaskForm onAddTask={handleAddTask} />\n      <TaskList tasks={tasks} loading={loading} onDeleteTask={handleDeleteTask} />\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iDAAiD,CAAC;MACnFL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;MACvBJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMO,aAAa,GAAIC,OAAO,IAAK;IACjCV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAK;IACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE7C,IAAI;MACF,MAAMvB,KAAK,CAACwB,MAAM,CAAC,mDAAmDJ,EAAE,EAAE,EAAE;QAC1EK,OAAO,EAAE;UACP,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;QACrC;MACF,CAAC,CAAC;MACFb,QAAQ,CAACD,KAAK,CAACmB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEX,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA,CAACH,QAAQ;MAACgC,SAAS,EAAEhB;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC5B,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACE,OAAO,EAAEA,OAAQ;MAACyB,YAAY,EAAEf;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9CID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}