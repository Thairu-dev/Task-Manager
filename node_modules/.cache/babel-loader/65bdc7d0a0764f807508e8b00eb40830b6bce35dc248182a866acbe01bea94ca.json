{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import TaskItem from './TaskItem'; \n// import Navbar from './Navbar';\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [newTask, setNewTask] = useState({ title: '', dueDate: '', description: '' });\n\n//   useEffect(() => {\n//     setLoading(true);\n//     axios.get('https://task-app-server-07x5.onrender.com/tasks')\n//       .then(response => {\n//         setTasks(response.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error(error);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   const handleDeleteTask = (id) => {\n//     axios.delete(`https://task-app-server-07x5.onrender.com/tasks/${id}`)\n//       .then(response => {\n//         setTasks(tasks.filter(task => task.id !== id));\n//       })\n//       .catch(error => console.error(error));\n//   };\n\n//   const handleCreateTask = (e) => {\n//     e.preventDefault();\n//     axios.post('https://task-app-server-07x5.onrender.com/tasks', newTask)\n//       .then(response => {\n//         setTasks([...tasks, response.data]);\n//         setNewTask({ title: '', dueDate: '', description: '' });\n//       })\n//       .catch(error => console.error(error));\n//   };\n\n//   const filteredTasks = tasks.filter(task =>\n//     task.title.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div>\n//       <Navbar/>\n//       <h2 className='task-list'>Tasks List</h2>\n\n//       <input \n//         type=\"text\" \n//         placeholder=\"Search tasks...\" \n//         value={searchTerm} \n//         onChange={(e) => setSearchTerm(e.target.value)} \n//       />\n\n//       <form onSubmit={handleCreateTask}>\n//         <input \n//           type=\"text\" \n//           placeholder=\"Title\" \n//           value={newTask.title} \n//           onChange={(e) => setNewTask({ ...newTask, title: e.target.value })} \n//           required \n//         />\n//         <input \n//           type=\"date\" \n//           placeholder=\"Due Date\" \n//           value={newTask.dueDate} \n//           onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })} \n//           required \n//         />\n//         <textarea \n//           placeholder=\"Description\" \n//           value={newTask.description} \n//           onChange={(e) => setNewTask({ ...newTask, description: e.target.value })} \n//           required \n//         />\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <ul>\n//           {filteredTasks.map(task => (\n//             <TaskItem key={task.id} task={task} onDelete={() => handleDeleteTask(task.id)} />\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TaskList;","map":{"version":3,"names":[],"sources":["/home/joe/Development/code/phase-4/Task-Manager/src/Components/TaskList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import TaskItem from './TaskItem'; \n// import Navbar from './Navbar';\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [newTask, setNewTask] = useState({ title: '', dueDate: '', description: '' });\n\n//   useEffect(() => {\n//     setLoading(true);\n//     axios.get('https://task-app-server-07x5.onrender.com/tasks')\n//       .then(response => {\n//         setTasks(response.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error(error);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   const handleDeleteTask = (id) => {\n//     axios.delete(`https://task-app-server-07x5.onrender.com/tasks/${id}`)\n//       .then(response => {\n//         setTasks(tasks.filter(task => task.id !== id));\n//       })\n//       .catch(error => console.error(error));\n//   };\n\n//   const handleCreateTask = (e) => {\n//     e.preventDefault();\n//     axios.post('https://task-app-server-07x5.onrender.com/tasks', newTask)\n//       .then(response => {\n//         setTasks([...tasks, response.data]);\n//         setNewTask({ title: '', dueDate: '', description: '' });\n//       })\n//       .catch(error => console.error(error));\n//   };\n\n//   const filteredTasks = tasks.filter(task =>\n//     task.title.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div>\n//       <Navbar/>\n//       <h2 className='task-list'>Tasks List</h2>\n      \n//       <input \n//         type=\"text\" \n//         placeholder=\"Search tasks...\" \n//         value={searchTerm} \n//         onChange={(e) => setSearchTerm(e.target.value)} \n//       />\n\n//       <form onSubmit={handleCreateTask}>\n//         <input \n//           type=\"text\" \n//           placeholder=\"Title\" \n//           value={newTask.title} \n//           onChange={(e) => setNewTask({ ...newTask, title: e.target.value })} \n//           required \n//         />\n//         <input \n//           type=\"date\" \n//           placeholder=\"Due Date\" \n//           value={newTask.dueDate} \n//           onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })} \n//           required \n//         />\n//         <textarea \n//           placeholder=\"Description\" \n//           value={newTask.description} \n//           onChange={(e) => setNewTask({ ...newTask, description: e.target.value })} \n//           required \n//         />\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <ul>\n//           {filteredTasks.map(task => (\n//             <TaskItem key={task.id} task={task} onDelete={() => handleDeleteTask(task.id)} />\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TaskList;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}